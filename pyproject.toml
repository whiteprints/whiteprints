# SPDX-FileCopyrightText: Â© 2024 The "Whiteprints" contributors <whiteprints@pm.me>
#
# SPDX-License-Identifier: GPL-3.0-or-later

[build-system]
build-backend = "hatchling.build"
requires = [
    "hatch-fancy-pypi-readme>=24.1",
    "hatch-vcs>=0.4",
    "hatchling>=1.27",
]

[project]
name = "whiteprints"
description = "A Copier-based cookiecutter for creating Python projects managed by uv."
keywords = [
    "Python",
]
license = "GPL-3.0-or-later"
license-files = [
    "LICENSES/GPL-3.0-or-later.txt",
]
maintainers = [
    { name = "Romain Brault", email = "whiteprints@pm.me" },
]
authors = [
    { name = "Romain Brault", email = "whiteprints@pm.me" },
]
requires-python = ">=3.9,<4.0"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Framework :: Pytest",
    "Framework :: Sphinx",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dynamic = [
    "readme",
    "version",
]
dependencies = [
    "click>=8.1.8",
    "distro==1.9.0",
    "importlib-metadata==8.6.1; python_full_version<'3.10.0'",
    "pygments>=2.15.1",
    "python-dotenv==1.0.1",
    "rich>=13.9.4",
    "rich-click==1.8.6",
    "typing-extensions==4.12.2; python_full_version<'3.12.0'",
    "uv>=0.6.2",
]
urls.changelog = "https://github.com/whiteprints/whiteprints/releases"
urls.discussions = "https://github.com/whiteprints/whiteprints/discussions"
urls.documentation = "https://github.com/whiteprints/whiteprints"
urls.download = "https://github.com/whiteprints/whiteprints/releases"
urls.homepage = "https://github.com/whiteprints/whiteprints"
urls.integration = "https://github.com/whiteprints/whiteprints/actions"
urls.issues = "https://github.com/whiteprints/whiteprints/issues"
urls.pypi = "https://pypi.org/project/whiteprints"
urls.repository = "https://github.com/whiteprints/whiteprints"
scripts.whiteprints = "whiteprints.cli.entrypoint:whiteprints"

[dependency-groups]
dev = [
    { include-group = "audit-maintainability" },
    { include-group = "audit-vulnerabilities" },
    { include-group = "build-documentation" },
    { include-group = "check-exceptions" },
    { include-group = "check-maintainability" },
    { include-group = "check-vulnerabilities" },
    { include-group = "coverage" },
    { include-group = "editor" },
    { include-group = "lint" },
    { include-group = "localization" },
    { include-group = "profile" },
    { include-group = "serve-documentation" },
    { include-group = "tests" },
]

build-documentation = [
    "myst-parser[linkify]==3.0.1",
    "pydata-sphinx-theme==0.16.1",
    "sphinx==7.4.7",
    "sphinx-autoapi==3.6.0",
    "sphinx-click==6.0.0",
    "sphinx-copybutton==0.5.2",
    "sphinxcontrib-napoleon==0.7.0",
    "sphinxcontrib-spelling==8.0.0",
    "stdlib-list>=0.11.1",
]
tests = [
    "beartype==0.19.0",
    "hypothesis==6.126.0",
    "pytest==8.3.4",
    "pytest-cov==6.0.0",
    "pytest-gitconfig==0.7.0",
    "pytest-html==4.1.1",
    "pytest-md-report==0.6.3",
    "pytest-randomly==3.16.0",
    "pytest-xdist==3.6.1",
    "xdoctest[colors]==1.2.0",
]
profile = [
    "scalene==1.5.51",
]
editor = [
    "pynvim==0.5.2",
]
lint = [
    "pylint==3.3.4",
    { include-group = "tests" },
]
coverage = [
    "coverage==7.6.12",
]
audit-vulnerabilities = [
    "pip-audit==2.8.0",
]
audit-maintainability = [
    "radon==6.0.1",
]
check-exceptions = [
    "tryceratops==2.4.1",
]
check-maintainability = [
    "xenon==0.9.3",
]
check-vulnerabilities = [
    "bandit==1.8.3",
]
serve-documentation = [
    "sphinx-autobuild==2024.10.3",
    { include-group = "build-documentation" },
]
localization = [
    "babel==2.17.0",
]

[tool.pyproject-fmt]
column_width = 79
indent = 4
keep_full_version = true
max_supported_python = "3.13"
