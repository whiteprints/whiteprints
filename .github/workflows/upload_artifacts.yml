# SPDX-FileCopyrightText: Â© 2024 The "Whiteprints" contributors <whiteprints@pm.me>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Upload Release Artifacts

on:
  push:
    # branches to consider in the event; optional, defaults to all
    tags:
      - "v*.*.*"

jobs:
  release-package:
    name: Upload wheel and sdist
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Try to download built artifact
        id: download-artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: Packages
          path: dist
        continue-on-error: true
      - name: Build and Test Workflow (fallback if no artifacts available)
        if: steps.download-artifact.outcome == 'failure'
        uses: ./.github/workflows/build_and_test.yml
        id: build_and_test
      - name: Retry downloading artifact after fallback build
        if: steps.download-artifact.outcome == 'failure'
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: Packages
          path: dist
      - name: Upload dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} dist/** --clobber
    outputs:
      python-versions: ${{ steps.build_and_test.outputs.python-versions }}

  docs-generation:
    name: Upload documentation
    runs-on: ubuntu-latest
    environment:
      name: artifacts
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Build docs
        run: |
          just build-documentation
          zip -r documentation.zip docs_build
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2
        with:
          subject-path: documentation.zip*
      - name: Upload docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} documentation.zip* --clobber

  sbom-vulnerabilities-generation:
    name: Generate SBOM under Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: release-package
    environment:
      name: artifacts
    strategy:
      matrix:
        python: ${{ fromJson(needs.release-package.outputs.python-versions) }}
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: SBOM generation
        run: |
          just BOM-vulnerabilities ${{ matrix.python }}
      - name: Upload BOM vulnerabilities
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: BOM-vulnerabilities-${{ matrix.os }}-${{ matrix.python }}
          path: BOM/
          overwrite: true

  sbom-publication:
    name: Publish SBOM
    runs-on: ubuntu-latest
    environment:
      name: artifacts
    needs:
      - sbom-vulnerabilities-generation
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Download coverage data
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          pattern: BOM-vulnerabilities-*
          merge-multiple: true
          path: BOM/
      - name: SBOM generation
        run: |
          just BOM-licenses
      - name: Create BOM Archive
        shell: python
        run: |
          import zipfile, os
          from pathlib import Path

          with zipfile.ZipFile('SBOM.zip', 'w') as zipf:
              for f in Path('BOM').rglob('*'):
                  zipf.write(f, f.relative_to('BOM'))
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2
        with:
          subject-path: SBOM.zip*
      - name: Upload SBOM as Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} SBOM.zip* --clobber
