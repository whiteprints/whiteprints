# SPDX-FileCopyrightText: Â© 2024 The "Whiteprints" contributors <whiteprints@pm.me>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Upload Release Artifacts

on:
  push:
    # branches to consider in the event; optional, defaults to all
    tags:
      - "v*.*.*"

jobs:
  build-package:
    name: Build and inspect package
    runs-on: ubuntu-latest
    environment:
      name: artifacts
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Build and inspect package
        id: baipp
        uses: hynek/build-and-inspect-python-package@14c7e53f5d033cfa99f7af916fa59a6f7f356394 # v2
        with:
          attest-build-provenance-github: true
    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}
  release-package:
    name: Upload wheel and sdist
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build-package
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Download built artifact to dist/
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: Packages
          path: dist
      - name: Upload dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} dist/** --clobber
  docs-generation:
    name: Upload documentation
    runs-on: ubuntu-latest
    environment:
      name: artifacts
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Build docs
        run: |
          just build-documentation
          zip -r documentation.zip docs_build
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2
        with:
          subject-path: documentation.zip*
      - name: Upload docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} documentation.zip* --clobber
  sbom-vulnerabilities-generation:
    name: Generate SBOM under Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment:
      name: artifacts
    needs:
      - build-package
    strategy:
      matrix:
        python: ${{ fromJson(needs.build-package.outputs.python-versions) }}
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: SBOM generation
        run: |
          just BOM-vulnerabilities ${{ matrix.python }}
      - name: Upload BOM vulnerabilities
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4
        with:
          name: BOM-vulnerabilities-${{ matrix.os }}-${{ matrix.python }}
          path: BOM/
          overwrite: true
  sbom-publication:
    name: Publish SBOM
    runs-on: ubuntu-latest
    environment:
      name: artifacts
    needs:
      - sbom-vulnerabilities-generation
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
        with:
          version: "latest"
          enable-cache: true
      - name: Install just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      - name: Download coverage data
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          pattern: BOM-vulnerabilities-*
          merge-multiple: true
          path: BOM/
      - name: SBOM generation
        run: |
          just BOM-licenses
      - name: Create BOM Archive
        shell: python
        run: |
          import zipfile, os
          from pathlib import Path

          with zipfile.ZipFile('SBOM.zip', 'w') as zipf:
              for f in Path('BOM').rglob('*'):
                  zipf.write(f, f.relative_to('BOM'))
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2
        with:
          subject-path: SBOM.zip*
      - name: Upload SBOM as Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} SBOM.zip* --clobber
